#!/usr/bin/env cwl-runner

# (Re)generated by BlueBee Platform

$namespaces:
  bb: http://bluebee.com/cwl/
  ilmn-tes: http://platform.illumina.com/rdf/iap/
cwlVersion: cwl:v1.0
class: CommandLineTool
bb:toolVersion: '1'
requirements:
- class: InlineJavascriptRequirement
hints:
- class: DockerRequirement
  dockerPull: clinical_metagenomics_preprocessing:latest
- class: ResourceRequirement
  ilmn-tes:resources:
    tier: standard
    type: standardHiMem
    size: large
label: prinseqlite
stderr: stderr.txt
inputs:
  fastq1:
    type: File
    inputBinding:
      position: 0
      prefix: -fastq
  fastq2:
    type: File
    inputBinding:
      position: 1
      prefix: -fastq2
  min_qual_mean:
    type: int
    default: 20
    inputBinding:
      position: 2
      prefix: -min_qual_mean
  trim_qual_right:
    type: int
    default: 10
    inputBinding:
      position: 3
      prefix: -trim_qual_right
  trim_qual_left:
    type: int
    default: 10
    inputBinding:
      position: 4
      prefix: -trim_qual_left
  lc-method:
    type: string
    default: dust
    inputBinding:
      position: 5
      prefix: -lc_method
  lc-threshold:
    type: int
    default: 7
    inputBinding:
      position: 6
      prefix: -lc_threshold
outputs:
  fastq_output_1:
    type: File
    outputBinding:
      glob:
      - '*_1.fastq'
  plot:
    type: File
    outputBinding:
      glob:
      - '*.plot'
  error_log:
    type: stderr
  fastq_output_2:
    type: File
    outputBinding:
      glob:
      - '*_2.fastq'
arguments:
- position: 7
  valueFrom: -no_qual_header
- position: 8
  valueFrom: -qual_noscale
- position: 11
  prefix: -graph_data
  valueFrom: $(inputs.fastq1.basename.split('.')[0] + "_quality.plot")
- position: 10
  prefix: -out_good
  valueFrom: $(inputs.fastq1.basename.split('.')[0])
- position: 12
  prefix: -out_bad
  valueFrom: 'null'
baseCommand:
- prinseq-lite.pl

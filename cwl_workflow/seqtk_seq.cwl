#!/usr/bin/env cwl-runner

# (Re)generated by BlueBee Platform

$namespaces:
  bb: http://bluebee.com/cwl/
  ilmn-tes: http://platform.illumina.com/rdf/iap/
cwlVersion: cwl:v1.0
class: CommandLineTool
bb:toolVersion: '1'
id: seqtk
requirements:
- class: InitialWorkDirRequirement
  listing:
  - entry: |-
      import argparse
      import subprocess as sp
      import os.path
      import sys
      parser = argparse.ArgumentParser(description='run seqtk')
      parser.add_argument('fastqs', metavar='N', type=str, nargs='+')
      args = parser.parse_args()
      for i in args.fastqs:
        cmd = [f"seqtk seq -a {i} > {os.path.splitext(os.path.basename(i))[0]}.fasta"]
        sp.run(cmd, capture_output=False, stderr=sys.stderr, check=True, shell=True)
      cmd = f"set -euo pipefail; cat {' '.join([os.path.splitext(os.path.basename(f))[0] + '.fasta' for f in args.fastqs])} | tee paired.fasta | awk 'BEGIN{{RS=\">\"}}NR>1{{sub(\"\\n\",\"\\t\"); gsub(\"\\n\",\"\"); print $0}}' > NM_paired.txt"
      sp.run([cmd], stderr=sys.stderr, check=True, shell=True)
    entryname: seqtk.py
    writable: false
hints:
- class: DockerRequirement
  dockerPull: clinical_metagenomics_preprocessing:latest
- class: ResourceRequirement
  ilmn-tes:resources:
    tier: standard
    type: standardHiCpu
    size: small
label: converFastqsToFastasAndConcat
stderr: stderr.txt
inputs:
  fastq_1:
    type: File
    inputBinding:
      position: 1
  fastq_2:
    type: File
    inputBinding:
      position: 2
outputs:
  fasta:
    type: File
    outputBinding:
      glob:
      - paired.fasta
  NM:
    type: File
    outputBinding:
      glob:
      - NM_paired.txt
  error_log:
    type: stderr
  script:
    type: File
    outputBinding:
      glob:
      - seqtk.py
baseCommand:
- python
- seqtk.py

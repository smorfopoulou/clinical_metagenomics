#!/usr/bin/env cwl-runner

# (Re)generated by BlueBee Platform

$namespaces:
  bb: http://bluebee.com/cwl/
  ilmn-tes: http://platform.illumina.com/rdf/iap/
cwlVersion: cwl:v1.0
class: CommandLineTool
bb:toolVersion: '1'
id: summary_stats
requirements:
- class: InitialWorkDirRequirement
  listing:
  - entry: |-
      #!/bin/bash
      set -euo pipefail
      #inputs
      # 1 = output/1/trim/1_1.fastq.gz_trimming_report.txt
      # 2 = /output/1/trim/1_1.fastq.gz_trimming_report.txt
      # 3 = /output/1/quickAlign_human/1_1.fq
      # 4 = /output/1/quickAlign_rRNA/1_1.fq
      # 5 = /1_paired.fasta
      # 6 = /output/1/blastn/NM_paired.number
      # 7 = /output/1/blastn_rRNA/NM_paired.number
      # 8 = /output/1/protein/1_diamond.tab
      # 9 = /output/1/nucleotide/1_megaBLAST.tab
      #outputs
      # 1_raw.count
      # /output/1/summary/1_trimmed.count
      # /output/1/summary/1_nonhuman.count
      # /output/1/summary/1_nonrRNA.count
      #  /output/1/summary/1_QC.count
      # output/1/summary/1_nonhuman_blastn.count
      # /output/1/summary/1_nonrRNA_blastn.count
      # 1_maptoprot.count
      # /output/1/summary/1_maptonucl.count
      # 1_summary.count.new
      grep 'Total reads processed' $1 | awk -F":" 'BEGIN {OFS="\t"}{print "Raw reads", $2*2}' > 1_raw.count
      grep 'Reads with adapters:' $1 | awk -F":" 'BEGIN {OFS="\t"}{print "Trimmed reads", $2*2}' > 1_trimmed.count
      wc -l $2  |  awk  'BEGIN {OFS="\t"}{ print "Non human (bowtie2)", ($1/4)*2}' > 1_nonhuman.count
      wc -l  $3 |  awk 'BEGIN {OFS="\t"}{ print "Non rRNA (bowtie2)", ($1/4)*2}' > 1_nonrRNA.count
      wc -l  $4 | awk 'BEGIN {OFS="\t"}{ print "after QC", $1/2}' > 1_QC.count
      awk '{s+=$1} END {print s}' $5 | awk -F":" 'BEGIN {OFS="\t"}{ print "non human (blastn)", $1}'  > 1_nonhuman_blastn.count
      awk '{s+=$1} END {print s}' $6 | awk -F":" 'BEGIN {OFS="\t"}{ print "non rRNA (blastn)", $1}'  > 1_nonrRNA_blastn.count
      awk -F"\t" '{print $1}' $7 | sort | uniq | wc -l | awk -F" " '{print "Reads mapping to prot DB", $1}' > 1_maptoprot.count
      awk -F"\t" '{print $1}' $8 | sort | uniq | wc -l | awk -F" " '{print "Reads mapping to nucl DB", $1}' > 1_maptonucl.count

      cat 1_raw.count 1_trimmed.count 1_nonhuman.count 1_nonrRNA.count 1_QC.count 1_nonhuman_blastn.count 1_nonrRNA_blastn.count 1_maptoprot.count 1_maptonucl.count  > 1_summary.count.new
    entryname: summary.sh
    writable: false
hints:
- class: DockerRequirement
  dockerPull: clinical_metagenomics_preprocessing:latest
- class: ResourceRequirement
  ilmn-tes:resources:
    tier: standard
    type: standardHiCpu
    size: small
label: encephalitis_summary_report_tool
stderr: stderr.txt
inputs:
  trimming_fastq_1:
    type: File
    inputBinding:
      position: 1
  fastq_1:
    type: File
    inputBinding:
      position: 3
  fastq_2:
    type: File
    inputBinding:
      position: 4
  paired_fasta:
    type: File
    inputBinding:
      position: 5
  NM_paired:
    type: File
    inputBinding:
      position: 6
  RNA_NM_paired:
    type: File
    inputBinding:
      position: 7
  diamond:
    type: File
    inputBinding:
      position: 8
  blast:
    type: File
    inputBinding:
      position: 9
outputs:
  report:
    type: File
    outputBinding:
      glob:
      - 1_summary.count.new
  error_log:
    type: stderr
  summary_script:
    type: File
    outputBinding:
      glob:
      - summary.sh
baseCommand:
- bash
- summary.sh
